#Spring Cloud \uad6c\uc131\uc774\ub098 \ubcf5\uc7a1\ud55c \uc124\uc815\uc774 \uc694\uad6c\ub420 \ub54c YAML\uc774 \ub354 \uc720\ub9ac (properties\ubcf4\ub2e4 .. )
server.port=8081
server.servlet.context-path=/boot
logging.level.org.hibernate=info

#\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc124\uc815(DataSource)
spring.datasource.url=jdbc:postgresql://localhost:5432/smgSPBDB
spring.datasource.username=shinmingi
spring.datasource.password=4260
spring.datasource.driver-class-name=org.postgresql.Driver

#Mapper Interface \uc758 \uad6c\ud604\uccb4: SqlSessionFactoryBean
#Spring JPA(JDBC -> API) Interface \uc758 \uad6c\ud604\uccb4: Hibernate (ORM, Object-Relational Mapping \ud504\ub808\uc784\uc6cc\ud06c)(SQL Query\ube4c\ub4dc \uc790\ub3d9\uc0dd\uc131)

#Hibernate\uac00 \uc0ac\uc6a9\ud558\ub294 SQL Dialect\ub97c \uc124\uc815 (dialect: \uc5b8\uc5b4)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#\uc2a4\ud0a4\ub9c8 \uc0dd\uc131 (\uac1c\ubc1c\ud658\uacbd: create, update / \uc6b4\uc601\ud658\uacbd: none, validate)
spring.jpa.hibernate.ddl-auto=update

#Hibernate\uac00 \uc2e4\ud589\ud558\ub294 SQL \ucffc\ub9ac\ub97c \ub85c\uadf8\uc5d0 \ucd9c\ub825\ud558\ub3c4\ub85d
spring.jpa.show-sql=true
#\ub85c\uae45 \uae30\ub2a5\uc744 \ud65c\uc131\ud654\ud55c \ub4a4 SQL\uc744 \uc798 \ubcf4\uae30 \uc27d\uac8c \uc815\ub82c\ud558\ub294 \ub370 \ub3c4\uc6c0
spring.jpa.properties.hibernate.format_sql=true

#JSP View \uacbd\ub85c \uc124\uc815
spring.mvc.view.prefix=/WEB-INF/
spring.mvc.view.suffix=.jsp
#\uc815\uc801 \ub9ac\uc18c\uc2a4\ub97c \uc81c\uacf5\ud560 URL \ud328\ud134: \uc2a4\ud504\ub9c1\ubd80\ud2b8\uc5d0\uc11c\ub294 \uc790\ub3d9\uc774\uc9c0\ub9cc \uc0ac\uc6a9\uc790\uc815\uc758\ub85c \ud558\uace0\uc2f6\ub2e4\uba74 \uc124\uc815
spring.mvc.static-path-pattern=/resources/**

# \uc2a4\ud504\ub9c1\ubd80\ud2b8 \uae30\uc900
logging.level.org.springframework=INFO
logging.level.com.example=INFO

# Spring Security \ub514\ubc84\uae45 \ub85c\uadf8 \uc124\uc815
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
#\uc138\uc158\uc124\uc815 
server.servlet.session.timeout=1h

#######OAuth2.0 \ub370\uc774\ud130 \uc124\uc815############
#registration (\uad6c\uae00) \uc8fc\uc758!! redirect-uri\uc5d0  path \uc815\ud655\ud788 \uc9d1\uc5b4 \ub123\uc744\uac83..
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=1090461121782-raatin1kv6g61kfjsr4itcnl8n2u8gcm.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8081/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=email, profile

#registration (\ub124\uc774\ubc84)
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=eOakuPX1wTPdf1jzdK5C
spring.security.oauth2.client.registration.naver.client-secret=
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8081/boot/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name, email, nickname, profile_image, gender, birthday, birthyear, mobile

#provider (\ub124\uc774\ubc84\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uae30\uc785\ud574\uc918\uc57c\ud568. \uad6c\uae00/\ud398\ubd81\uc740 \ud544\uc694\uc5c6\uc74c )
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response


