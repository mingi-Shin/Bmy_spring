#Spring Cloud 구성이나 복잡한 설정이 요구될 때 YAML이 더 유리 (properties보다 .. )
server.port=8081
server.servlet.context-path=/boot
logging.level.org.hibernate=info

#데이터베이스 설정(DataSource)
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/smgSPBDB
spring.datasource.username=shinmingi
spring.datasource.password=4260

#Mapper Interface 의 구현체: SqlSessionFactoryBean 
#Spring JPA(JDBC -> API) Interface 의 구현체: Hibernate (ORM, Object-Relational Mapping 프레임워크)(SQL Query빌드 자동생성)

#PostgreSql상세지정 (dialect: 언어)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#스키마 생성(create,update)(개발환경: create, update / 운영환경: none, validate)
spring.jpa.hibernate.ddl-auto=update

#실행되는 SQL문을 보여주기
spring.jpa.show-sql=true

#실제 JPA 구현체인 Hibernate가 동작하면서 발생하는 SQL을 포맷팅해서 출력
spring.jpa.properties.hibernate.format_sql=true

#JSP View 경로 설정
spring.mvc.view.prefix=/WEB-INF/
spring.mvc.view.suffix=.jsp
#정적 리소스를 제공할 URL 패턴: 스프링부트에서는 자동이지만 사용자정의로 하고싶다면 설정 
spring.mvc.static-path-pattern=/resources/** 


# 스프링부트 기준 
logging.level.org.springframework=INFO
logging.level.com.example=INFO

# Spring Security 디버깅 로그 설정
logging.level.org.springframework.security=INFO
logging.level.org.springframework.security.web.access.ExceptionTranslationFilter=INFO
logging.level.org.springframework.security.web.access.AccessDeniedHandlerImpl=INFO
logging.level.org.springframework.security.web.csrf.CsrfFilter=INFO

